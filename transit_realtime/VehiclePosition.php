<?php
namespace transit_realtime;

// @@protoc_insertion_point(namespace:.transit_realtime.VehiclePosition)

/**
 * Generated by the protocol buffer compiler.  DO NOT EDIT!
 * source: gtfs-realtime.proto
 *
 * Realtime positioning information for a given vehicle.
 *
 * -*- magic methods -*-
 *
 * @method \transit_realtime\TripDescriptor getTrip()
 * @method void setTrip(\transit_realtime\TripDescriptor $value)
 * @method \transit_realtime\VehicleDescriptor getVehicle()
 * @method void setVehicle(\transit_realtime\VehicleDescriptor $value)
 * @method \transit_realtime\Position getPosition()
 * @method void setPosition(\transit_realtime\Position $value)
 * @method string getCurrentStopSequence()
 * @method void setCurrentStopSequence(\string $value)
 * @method string getStopId()
 * @method void setStopId(\string $value)
 * @method \transit_realtime\VehiclePosition\VehicleStopStatus getCurrentStatus()
 * @method void setCurrentStatus(\transit_realtime\VehiclePosition\VehicleStopStatus $value)
 * @method string getTimestamp()
 * @method void setTimestamp(\string $value)
 * @method \transit_realtime\VehiclePosition\CongestionLevel getCongestionLevel()
 * @method void setCongestionLevel(\transit_realtime\VehiclePosition\CongestionLevel $value)
 */
class VehiclePosition extends \ProtocolBuffers\Message
{
  // @@protoc_insertion_point(traits:.transit_realtime.VehiclePosition)
  
  /**
   * The Trip that this vehicle is serving.
   * Can be empty or partial if the vehicle can not be identified with a given
   * trip instance.
   *
   * @var \transit_realtime\TripDescriptor $trip
   * @tag 1
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $trip;
  
  /**
   * Additional information on the vehicle that is serving this trip.
   *
   * @var \transit_realtime\VehicleDescriptor $vehicle
   * @tag 8
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $vehicle;
  
  /**
   * Current position of this vehicle.
   *
   * @var \transit_realtime\Position $position
   * @tag 2
   * @label optional
   * @type \ProtocolBuffers::TYPE_MESSAGE
   **/
  protected $position;
  
  /**
   * The stop sequence index of the current stop. The meaning of
   * current_stop_sequence (i.e., the stop that it refers to) is determined by
   * current_status.
   * If current_status is missing IN_TRANSIT_TO is assumed.
   *
   * @var string $current_stop_sequence
   * @tag 3
   * @label optional
   * @type \ProtocolBuffers::TYPE_UINT32
   **/
  protected $current_stop_sequence;
  
  /**
   * Identifies the current stop. The value must be the same as in stops.txt in
   * the corresponding GTFS feed.
   *
   * @var string $stop_id
   * @tag 7
   * @label optional
   * @type \ProtocolBuffers::TYPE_STRING
   **/
  protected $stop_id;
  
  /**
   * The exact status of the vehicle with respect to the current stop.
   * Ignored if current_stop_sequence is missing.
   *
   * @var \transit_realtime\VehiclePosition\VehicleStopStatus $current_status
   * @tag 4
   * @label optional
   * @type \ProtocolBuffers::TYPE_ENUM
   * @see \transit_realtime\VehiclePosition\VehicleStopStatus
   **/
  protected $current_status;
  
  /**
   * Moment at which the vehicle's position was measured. In POSIX time
   * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
   *
   * @var string $timestamp
   * @tag 5
   * @label optional
   * @type \ProtocolBuffers::TYPE_UINT64
   **/
  protected $timestamp;
  
  /**
   * @var \transit_realtime\VehiclePosition\CongestionLevel $congestion_level
   * @tag 6
   * @label optional
   * @type \ProtocolBuffers::TYPE_ENUM
   * @see \transit_realtime\VehiclePosition\CongestionLevel
   **/
  protected $congestion_level;
  
  
  // @@protoc_insertion_point(properties_scope:.transit_realtime.VehiclePosition)

  // @@protoc_insertion_point(class_scope:.transit_realtime.VehiclePosition)

  /**
   * get descriptor for protocol buffers
   * 
   * @return \ProtocolBuffersDescriptor
   */
  public static function getDescriptor()
  {
    static $descriptor;
    
    if (!isset($descriptor)) {
      $desc = new \ProtocolBuffers\DescriptorBuilder();
      $desc->addField(1, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "trip",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\transit_realtime\TripDescriptor',
      )));
      $desc->addField(8, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "vehicle",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\transit_realtime\VehicleDescriptor',
      )));
      $desc->addField(2, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_MESSAGE,
        "name"     => "position",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
        "message" => '\transit_realtime\Position',
      )));
      $desc->addField(3, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_UINT32,
        "name"     => "current_stop_sequence",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(7, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_STRING,
        "name"     => "stop_id",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => "",
      )));
      $desc->addField(4, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_ENUM,
        "name"     => "current_status",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => \transit_realtime\VehiclePosition\VehicleStopStatus::IN_TRANSIT_TO,
      )));
      $desc->addField(5, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_UINT64,
        "name"     => "timestamp",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      $desc->addField(6, new \ProtocolBuffers\FieldDescriptor(array(
        "type"     => \ProtocolBuffers::TYPE_ENUM,
        "name"     => "congestion_level",
        "required" => false,
        "optional" => true,
        "repeated" => false,
        "packable" => false,
        "default"  => null,
      )));
      // @@protoc_insertion_point(builder_scope:.transit_realtime.VehiclePosition)

      $descriptor = $desc->build();
    }
    return $descriptor;
  }

}
